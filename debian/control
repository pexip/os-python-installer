Source: python-installer
Section: python
Priority: optional
Maintainer: Debian Python Team <team+python@tracker.debian.org>
Uploaders:
 Stuart Prescott <stuart@debian.org>,
 Stefano Rivera <stefanor@debian.org>,
Homepage: https://github.com/pypa/installer/
Vcs-Git: https://salsa.debian.org/python-team/packages/python-installer.git
Vcs-Browser: https://salsa.debian.org/python-team/packages/python-installer/
Build-Depends:
 debhelper-compat (= 13),
 dh-python (>> 5.20211016~),
 dh-sequence-python3,
 dh-sequence-sphinxdoc <!nodoc>,
 flit,
 pybuild-plugin-pyproject,
 python3-all,
 python3-mock <!nocheck>,
 python3-myst-parser <!nodoc>,
 python3-pytest <!nocheck>,
 python3-setuptools,
 python3-sphinx <!nodoc>,
 python3-sphinx-argparse <!nodoc>,
Standards-Version: 4.6.1
Rules-Requires-Root: no

Package: python3-installer
Architecture: all
Depends:
 ${misc:Depends},
 ${python3:Depends},
Suggests:
 python-installer-doc,
Description: Python library for unpacking and installing wheels
 "installer" is a low-level library for installing a Python package from a
 wheel distribution; the wheel is the basic unit of Python module
 distribution to end users. It provides basic functionality and abstractions
 for handling wheels and installing packages from wheels, including:
 .
  * Logic for "unpacking" a wheel (i.e. installation).
  * Abstractions for various parts of the unpacking process.
  * Extensible simple implementations of the abstractions.
  * Platform-independent Python script wrapper generation.

Package: python-installer-doc
Architecture: all
Section: doc
Depends:
 ${sphinxdoc:Depends},
 ${misc:Depends},
Multi-Arch: foreign
Description: Python library for unpacking and installing wheels (documentation)
 "installer" is a low-level library for installing a Python package from a
 wheel distribution; the wheel is the basic unit of Python module
 distribution to end users. It provides basic functionality and abstractions
 for handling wheels and installing packages from wheels, including:
 .
  * Logic for "unpacking" a wheel (i.e. installation).
  * Abstractions for various parts of the unpacking process.
  * Extensible simple implementations of the abstractions.
  * Platform-independent Python script wrapper generation.
